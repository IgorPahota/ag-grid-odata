{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/OdataProvider.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\r\n  IGetRowsParams,\r\n  ColDef,\r\n  ColGroupDef,\r\n  ColumnVO,\r\n  IServerSideGetRowsRequest,\r\n} from \"@ag-grid-community/all-modules\";\r\nimport { IServerSideGetRowsParams } from \"@ag-grid-enterprise/all-modules\";\r\n\r\nimport {\r\n  OdataQueryExtendFull,\r\n  OdataQueryExtendOptions,\r\n  OdataQueryOptions,\r\n  PivotResultDat,\r\n} from \"./types\";\r\n\r\nexport declare class OdataProviderOptions {\r\n  /**\r\n   * Function for call odata api\r\n   */\r\n  callApi: (query: string) => Promise<any>;\r\n  /**\r\n   * Name of field contain count of record results in grouping odata query\r\n   * @default childCount\r\n   */\r\n  groupCountFieldName?: string;\r\n  /**\r\n   * Use in odata build query\r\n   * @default false\r\n   */\r\n  isCaseSensitiveStringFilter?: boolean;\r\n  /**\r\n   * Callback for extend odata query options for implement user logic\r\n   */\r\n  beforeRequest?: (\r\n    options: OdataQueryOptions,\r\n    provider: OdataProvider,\r\n    request: IGetRowsParams | IServerSideGetRowsRequest\r\n  ) => void;\r\n  /**\r\n  * Callback for pivot or group for aplly column ag-grid settings\r\n  * @example\r\n  * <pre><code>\r\n  * beforeSetSecondaryColumns = secondaryColumns => {\r\n   for (let i = 0; i < secondaryColumns.length; i++) {\r\n     const col = secondaryColumns[i]\r\n     if (col.children) {\r\n       beforeSetSecondaryColumns(col.children)\r\n     } else {\r\n       //Aplly new setting for group dyncamic created column\r\n       // col.cellClassRules = \r\n       // col.valueFormatter = \r\n     }\r\n   }\r\n }\r\n  * </pre></code>\r\n  */\r\n  beforeSetSecondaryColumns?: (\r\n    secondaryColDefs: (ColDef | ColGroupDef)[]\r\n  ) => void;\r\n  /**\r\n  * Callback invoked after load data\r\n  * @param options odata provider options\r\n  * @param rowData data for ag-grid\r\n  * @param totalCount total count records\r\n  * \r\n  * @example\r\n  * <pre><code>\r\n       afterLoadData = (options, rowData, totalCount) => {\r\n           if (options.skip === 0 && rowData.length > 0) {\r\n           gridApi.columnController.autoSizeAllColumns()\r\n           }\r\n       }\r\n  * </code></pre>\r\n  */\r\n  afterLoadData?: (\r\n    options: OdataQueryExtendOptions,\r\n    rowData: any[],\r\n    totalCount: number\r\n  ) => void;\r\n  /**\r\n   * Callback for catch error\r\n   */\r\n  setError?: (error: any) => void;\r\n}\r\nfunction escapeRegExp(string) {\r\n  return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n}\r\nfunction replaceAll(str: string, search: string, replacement: string): string {\r\n  return str.replace(new RegExp(escapeRegExp(search), \"g\"), replacement);\r\n}\r\n\r\nexport class OdataProvider implements OdataProviderOptions {\r\n  /**\r\n   * Function for call odata api\r\n   */\r\n  callApi: (query: string) => Promise<any>;\r\n  /**\r\n   * Name of field contain count of record results in grouping odata query\r\n   * @default childCount\r\n   */\r\n  groupCountFieldName: string = \"childCount\";\r\n  /**\r\n   * Use in odata build query\r\n   * @default false\r\n   */\r\n  isCaseSensitiveStringFilter: boolean = false;\r\n  /**\r\n   * Callback for extend odata query options for implement user logic\r\n   */\r\n  beforeRequest: (\r\n    options: OdataQueryOptions,\r\n    provider: OdataProvider,\r\n    request: IGetRowsParams | IServerSideGetRowsRequest\r\n  ) => void;\r\n  /**\r\n    * Callback for pivot or group for aplly column ag-grid settings\r\n    * @example\r\n    * <pre><code>\r\n    * beforeSetSecondaryColumns = secondaryColumns => {\r\n     for (let i = 0; i < secondaryColumns.length; i++) {\r\n       const col = secondaryColumns[i]\r\n       if (col.children) {\r\n         beforeSetSecondaryColumns(col.children)\r\n       } else {\r\n         //Aplly new setting for group dyncamic created column\r\n         // col.cellClassRules = \r\n         // col.valueFormatter = \r\n       }\r\n     }\r\n   }\r\n    * </pre></code>\r\n    */\r\n  beforeSetSecondaryColumns: (\r\n    secondaryColDefs: (ColDef | ColGroupDef)[]\r\n  ) => void;\r\n  /**\r\n    * Callback invoked after load data\r\n    * @param options odata provider options\r\n    * @param rowData data for ag-grid\r\n    * @param totalCount total count records\r\n    * \r\n    * @example\r\n    * <pre><code>\r\n         afterLoadData = (options, rowData, totalCount) => {\r\n             if (options.skip === 0 && rowData.length > 0) {\r\n             gridApi.columnController.autoSizeAllColumns()\r\n             }\r\n         }\r\n    * </code></pre>\r\n    */\r\n  afterLoadData: (\r\n    options: OdataQueryExtendOptions,\r\n    rowData: any[],\r\n    totalCount: number\r\n  ) => void;\r\n  /**\r\n   * Callback for catch error\r\n   */\r\n  setError: (error: any) => void;\r\n  constructor(options: OdataProviderOptions) {\r\n    Object.assign(this, options);\r\n    if (this.callApi == null) {\r\n      throw new Error(\"callApi must be specified\");\r\n    }\r\n    if (typeof this.callApi !== \"function\") {\r\n      throw new Error(\"callApi must be a function\");\r\n    }\r\n    if (\r\n      this.beforeRequest != null &&\r\n      typeof this.beforeRequest !== \"function\"\r\n    ) {\r\n      throw new Error(\"beforeRequest must be a function\");\r\n    }\r\n    if (\r\n      this.afterLoadData != null &&\r\n      typeof this.afterLoadData !== \"function\"\r\n    ) {\r\n      throw new Error(\"afterLoadData must be a function\");\r\n    }\r\n    if (this.setError != null && typeof this.setError !== \"function\") {\r\n      throw new Error(\"setError must be a function\");\r\n    }\r\n  }\r\n  /**Odata query operations */\r\n  odataOperator = {\r\n    // Logical\r\n    equals: (col: string, value1: string): string => `${col} eq ${value1}`,\r\n    notEqual: (col: string, value1: string): string => `${col} ne ${value1}`,\r\n    lessThan: (col: string, value1: string): string => `${col} lt ${value1}`,\r\n    lessThanOrEqual: (col: string, value1: string): string =>\r\n      `${col} le ${value1}`,\r\n    greaterThan: (col: string, value1: string): string => `${col} gt ${value1}`,\r\n    greaterThanOrEqual: (col: string, value1: string): string =>\r\n      `${col} ge ${value1}`,\r\n    inRange: (col: string, value1: string, value2: any): string =>\r\n      `(${col} ge ${value1} and ${col} le ${value2})`,\r\n    // String\r\n    equalsStr: (\r\n      col: string,\r\n      value1: string,\r\n      isCaseSensitiveStringFilter: boolean\r\n    ): string =>\r\n      `${this.ifTolowerCol(\r\n        col,\r\n        isCaseSensitiveStringFilter\r\n      )} eq ${this.ifTolower(value1, isCaseSensitiveStringFilter)}`,\r\n    notEqualStr: (\r\n      col: string,\r\n      value1: string,\r\n      isCaseSensitiveStringFilter: boolean\r\n    ): string =>\r\n      `${this.ifTolowerCol(\r\n        col,\r\n        isCaseSensitiveStringFilter\r\n      )} ne ${this.ifTolower(value1, isCaseSensitiveStringFilter)}`,\r\n    contains: (\r\n      col: string,\r\n      value1: string,\r\n      isCaseSensitiveStringFilter: boolean\r\n    ): string =>\r\n      `contains(${this.ifTolowerCol(\r\n        col,\r\n        isCaseSensitiveStringFilter\r\n      )},${this.ifTolower(value1, isCaseSensitiveStringFilter)})`,\r\n    notContains: (\r\n      col: string,\r\n      value1: string,\r\n      isCaseSensitiveStringFilter: boolean\r\n    ): string =>\r\n      `contains(${this.ifTolowerCol(\r\n        col,\r\n        isCaseSensitiveStringFilter\r\n      )},${this.ifTolower(value1, isCaseSensitiveStringFilter)}) eq false`,\r\n    startsWith: (\r\n      col: string,\r\n      value1: string,\r\n      isCaseSensitiveStringFilter: boolean\r\n    ): string =>\r\n      `startswith(${this.ifTolowerCol(\r\n        col,\r\n        isCaseSensitiveStringFilter\r\n      )},${this.ifTolower(value1, isCaseSensitiveStringFilter)})  eq true`,\r\n    endsWith: (\r\n      col: string,\r\n      value1: string,\r\n      isCaseSensitiveStringFilter: boolean\r\n    ): string =>\r\n      `endswith(${this.ifTolowerCol(\r\n        col,\r\n        isCaseSensitiveStringFilter\r\n      )},${this.ifTolower(value1, isCaseSensitiveStringFilter)})  eq true`,\r\n    inStr: (\r\n      col: string,\r\n      values: string[],\r\n      isCaseSensitiveStringFilter: boolean\r\n    ): string =>\r\n      `${this.ifTolowerCol(col, isCaseSensitiveStringFilter)} in (${values\r\n        .map((x) => `'${this.ifTolower(x, isCaseSensitiveStringFilter)}'`)\r\n        .join()})`,\r\n    in: (col: string, values: string[]) =>\r\n      `${col} in (${values.map((x) => `${x}`).join()})`,\r\n    notIn: (col: string, values: string[]) =>\r\n      `not (${col} in (${values.map((x) => `${x}`).join()}))`,\r\n    // Date\r\n    trunc: (col: string): string => `date(${col})`,\r\n  };\r\n\r\n  /**\r\n   * Apply tolower for column in odata syntax\r\n   * @param col column name\r\n   * @param isCaseSensitiveStringFilter need apply tolower\r\n   */\r\n  ifTolowerCol = (col: string, isCaseSensitiveStringFilter: boolean): string =>\r\n    isCaseSensitiveStringFilter ? col : `tolower(${col})`;\r\n\r\n  /**\r\n   *\r\n   * @param value string value\r\n   * @param isCaseSensitiveStringFilter  need apply tolower\r\n   */\r\n  ifTolower = (value: string, isCaseSensitiveStringFilter: boolean): string =>\r\n    isCaseSensitiveStringFilter ? value : value ? value.toLowerCase() : value;\r\n  /**\r\n   * Odata aggregation operations\r\n   */\r\n  odataAggregation = {\r\n    // Logical\r\n    sum: (col: string, asField?: any): string =>\r\n      `${col} with sum as ${col || asField}`,\r\n    min: (col: string, asField?: any): string =>\r\n      `${col} with min as ${col || asField}`,\r\n    max: (col: string, asField?: any): string =>\r\n      `${col} with max as ${col || asField}`,\r\n    avg: (col: string, asField?: any): string =>\r\n      `${col} with average as ${col || asField}`,\r\n    count: (col: string, asField?: any): string =>\r\n      `$count as ${col || asField}`,\r\n  };\r\n  /**\r\n   * Odata query builder\r\n   * @param options parameter for odata query\r\n   */\r\n  toQuery = (options: OdataQueryExtendFull): string => {\r\n    let path: string[] = [];\r\n    if (options.count) {\r\n      path.push(\"$count=true\");\r\n    }\r\n    if (options.skip) {\r\n      path.push(`$skip=${options.skip}`);\r\n    }\r\n    if (options.top) {\r\n      path.push(`$top=${options.top}`);\r\n    }\r\n    if (options.sort && options.sort.length > 0) {\r\n      path.push(\"$orderby=\" + options.sort.join(\",\"));\r\n    }\r\n    if (options.filter && options.filter.length > 0) {\r\n      path.push(\"$filter=\" + options.filter.join(\" and \"));\r\n    }\r\n    if (options.apply && options.apply.length > 0) {\r\n      path.push(\"$apply=\" + options.apply.join(\"/\"));\r\n    }\r\n    if (options.expand && options.expand.length > 0) {\r\n      path.push(\"$expand=\" + options.expand.join(\",\"));\r\n    }\r\n    let query: string = \"\";\r\n    if (path.length > 0) {\r\n      query = \"?\" + path.join(\"&\");\r\n    }\r\n    return query;\r\n  };\r\n  /**\r\n   * Add quotes for string value\r\n   * @param value string value\r\n   */\r\n  encode = (value: string): string =>\r\n    this.isStrVal(value) ? replaceAll(value, \"'\", \"''\") : value;\r\n  /**\r\n   * Conctat to date a time for create datetime format for odata query\r\n   * @param value date string\r\n   */\r\n  toDateTime = (value: string): string => `${value}T00:00:00.000Z`;\r\n  /**\r\n   * Convert ag-grid column filter to odata query\r\n   * @param colName columnName\r\n   * @param col ag-grid column\r\n   */\r\n  private getFilterOdata = (colName: string, col: any): string => {\r\n    colName = replaceAll(colName, \".\", \"/\");\r\n    const me = this;\r\n    colName = me.getWrapColumnName(colName);\r\n    switch (col.filterType) {\r\n      case \"number\":\r\n        return me.odataOperator[col.type](colName, col.filter, col.filterTo);\r\n      case \"text\": {\r\n        let operatorName = col.type;\r\n        const filter = me.encode(col.filter);\r\n        // let filterTo = me.encode(col.filterTo);\r\n        if (\r\n          (operatorName === \"equals\" || operatorName === \"notEqual\") &&\r\n          !me.isCaseSensitiveStringFilter\r\n        ) {\r\n          operatorName += \"Str\";\r\n        }\r\n        return me.odataOperator[operatorName](\r\n          colName,\r\n          `'${filter}'`,\r\n          me.isCaseSensitiveStringFilter\r\n        );\r\n      }\r\n      case \"date\":\r\n        return me.odataOperator[col.type](\r\n          colName,\r\n          `${me.toDateTime(col.dateFrom)}`,\r\n          `${me.toDateTime(col.dateTo)}`\r\n        );\r\n      case \"set\":\r\n        return col.values.length > 0\r\n          ? me.odataOperator.inStr(\r\n              colName,\r\n              col.values,\r\n              this.isCaseSensitiveStringFilter\r\n            )\r\n          : \"\";\r\n      default:\r\n        break;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  /**\r\n   * Caclulate pivot data for ag-grid from odata\r\n   * @param pivotCols pivot columns\r\n   * @param rowGroupCols row group columns\r\n   * @param valueCols value columns\r\n   * @param data odata result\r\n   * @param countField count field name\r\n   */\r\n  private getPivot = (\r\n    pivotCols: ColumnVO[],\r\n    rowGroupCols: ColumnVO[],\r\n    valueCols: ColumnVO[],\r\n    data: any[],\r\n    countField: string\r\n  ): PivotResultDat => {\r\n    // assume 1 pivot col and 1 value col for this example\r\n\r\n    const pivotData: any[] = [];\r\n    const aggColsList: any[] = [];\r\n\r\n    const colKeyExistsMap: any = {};\r\n\r\n    const secondaryColDefs: any[] = [];\r\n    const secondaryColDefsMap = {};\r\n\r\n    data.forEach(function (item) {\r\n      var pivotValues: string[] = [];\r\n      pivotCols.forEach(function (pivotCol) {\r\n        var pivotField = pivotCol.id;\r\n        var pivotValue = item[pivotField];\r\n        if (\r\n          pivotValue !== null &&\r\n          pivotValue !== undefined &&\r\n          pivotValue.toString\r\n        ) {\r\n          pivotValues.push(pivotValue.toString());\r\n        } else {\r\n          pivotValues.push(\"-\");\r\n        }\r\n      });\r\n\r\n      // var pivotValue = item[pivotField].toString();\r\n      var pivotItem = {};\r\n\r\n      valueCols.forEach(function (valueCol) {\r\n        var valField = valueCol.id;\r\n        var colKey = createColKey(pivotValues, valField);\r\n\r\n        var value = item[valField];\r\n        pivotItem[colKey] = value;\r\n\r\n        if (!colKeyExistsMap[colKey]) {\r\n          addNewAggCol(colKey, valueCol);\r\n          addNewSecondaryColDef(colKey, pivotValues, valueCol);\r\n          colKeyExistsMap[colKey] = true;\r\n        }\r\n      });\r\n      if (countField) {\r\n        pivotItem[countField] = item[countField];\r\n      }\r\n\r\n      rowGroupCols.forEach(function (rowGroupCol) {\r\n        var rowGroupField = rowGroupCol.id;\r\n        pivotItem[rowGroupField] = item[rowGroupField];\r\n      });\r\n\r\n      pivotData.push(pivotItem);\r\n    });\r\n\r\n    function addNewAggCol(colKey: string, valueCol: ColumnVO): void {\r\n      var newCol = {\r\n        id: colKey,\r\n        field: colKey,\r\n        aggFunc: valueCol.aggFunc,\r\n      };\r\n      aggColsList.push(newCol);\r\n    }\r\n\r\n    function addNewSecondaryColDef(colKey, pivotValues, valueCol) {\r\n      var parentGroup: any = null;\r\n\r\n      var keyParts: any = [];\r\n\r\n      pivotValues.forEach(function (pivotValue: any) {\r\n        keyParts.push(pivotValue);\r\n        var colKey = createColKey(keyParts);\r\n        var groupColDef: any = secondaryColDefsMap[colKey];\r\n        if (!groupColDef) {\r\n          groupColDef = {\r\n            groupId: colKey,\r\n            headerName: pivotValue,\r\n            children: [],\r\n          };\r\n          secondaryColDefsMap[colKey] = groupColDef;\r\n          if (parentGroup) {\r\n            parentGroup.children.push(groupColDef);\r\n          } else {\r\n            secondaryColDefs.push(groupColDef);\r\n          }\r\n        }\r\n        parentGroup = groupColDef;\r\n      });\r\n\r\n      parentGroup.children.push({\r\n        colId: colKey,\r\n        headerName: valueCol.aggFunc + \"(\" + valueCol.displayName + \")\",\r\n        field: colKey,\r\n        suppressMenu: true,\r\n        sortable: false,\r\n      });\r\n    }\r\n\r\n    function createColKey(pivotValues: string[], valueField?: string): string {\r\n      var result = pivotValues.join(\"|\");\r\n      if (valueField !== undefined) {\r\n        result += \"|\" + valueField;\r\n      }\r\n      result = replaceAll(result, \".\", \"*\");\r\n      return result;\r\n    }\r\n\r\n    return {\r\n      data: pivotData,\r\n      aggCols: aggColsList,\r\n      secondaryColDefs: secondaryColDefs,\r\n    };\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param rowData array odata result\r\n   * @param rowGroupCols row group columns\r\n   * @param groupKeys what groups the user is viewing\r\n   * @param countField count field name\r\n   */\r\n  private buildGroupsFromData = (\r\n    rowData: any[],\r\n    rowGroupCols: ColumnVO[],\r\n    groupKeys: string[],\r\n    countField: string\r\n  ): any[] => {\r\n    const me = this;\r\n    let rowGroupCol = rowGroupCols[groupKeys.length];\r\n    let field = rowGroupCol.id;\r\n    let mappedRowData = me.groupBy(rowData, field);\r\n    let groups: any = [];\r\n\r\n    me.iterateObject(mappedRowData, function (key, rowData) {\r\n      var groupItem = me.aggregateList(rowData, countField);\r\n      groupItem[field] = key;\r\n      groups.push(groupItem);\r\n    });\r\n    return groups;\r\n  };\r\n\r\n  /**\r\n   * Internal function for execute callback function for each property of object\r\n   * @param object object contained odata grouped result\r\n   * @param callback function do somthing\r\n   */\r\n  private iterateObject = (\r\n    object: any,\r\n    callback: (key: string, rowData: any[]) => void\r\n  ): void => {\r\n    if (!object) {\r\n      return;\r\n    }\r\n    const keys = Object.keys(object);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      const value = object[key];\r\n      callback(key, value);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Prepeare grouped data\r\n   * @param rowData array odata result\r\n   * @param field grouping field\r\n   */\r\n  private groupBy = (rowData: any[], field: string): any => {\r\n    var result = {};\r\n    rowData.forEach(function (item) {\r\n      var key = item[field];\r\n      var listForThisKey = result[key];\r\n      if (!listForThisKey) {\r\n        listForThisKey = [];\r\n        result[key] = listForThisKey;\r\n      }\r\n      listForThisKey.push(item);\r\n    });\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Calculate total count records in group\r\n   * @param rowData array odata result data\r\n   * @param countField field contained count of all records\r\n   */\r\n  private aggregateList = (rowData: any[], countField: string): any => {\r\n    var result = {};\r\n    rowData.forEach((row) => {\r\n      if (countField && row[countField] != null) {\r\n        const totalCount = (result[countField] || 0) + (row[countField] || 0);\r\n        delete row[countField];\r\n        result[countField] = totalCount;\r\n      }\r\n      result = Object.assign(result, row);\r\n    });\r\n    return result;\r\n  };\r\n\r\n  /**\r\n     * Calculate distinct values for input field from Odata api\r\n     * @param field The field of the row to get the cells data from \r\n     * @param callback The function for return distinct values for input field\r\n     * @example \r\n     * <pre><code>\r\n     *  const setFilterValuesFuncParams = params => {\r\n     *    const me = this\r\n     *    const col = params.colDef.field\r\n     *    const storeName = me.getStoreName(col)\r\n     *    const callback = data => {\r\n     *      if (data) {\r\n     *        me.setState({ [storeName]: data })\r\n     *        params.success(data)\r\n     *      }\r\n     *    }\r\n     *    odataProviderInstance.getFilterValuesParams(params.colDef.field, callback)\r\n     *  }\r\n     * \r\n     * ///....\r\n     *      <AgGridColumn\r\n                  field=\"product\"\r\n                  headerName={'PRODUCT'}\r\n                  filter=\"agSetColumnFilter\"\r\n                  // rowGroup\r\n                  // enablePivot\r\n                  enableRowGroup\r\n                  filterParams={{\r\n                    values: setFilterValuesFuncParams,\r\n                    newRowsAction: 'keep'\r\n                  }}\r\n                  // filterParams={{caseSensitive: true}}\r\n                />\r\n     * </code></pre>\r\n     */\r\n  getFilterValuesParams = (\r\n    field: string,\r\n    callback: (data: any[]) => void\r\n  ): void => {\r\n    const me = this;\r\n    me.callApi(\r\n      me.toQuery({\r\n        apply: [`groupby((${me.getWrapColumnName(field)}))`],\r\n      })\r\n    ).then((x) => {\r\n      if (x) {\r\n        let values = me.getOdataResult(x);\r\n        callback(values.map((y) => y[field]));\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * Detect is string value\r\n   * @param value\r\n   */\r\n  isStrVal = (value: any): boolean => typeof value === \"string\";\r\n  /**\r\n   * Extartc values from odata response\r\n   * @param response\r\n   */\r\n  private getOdataResult = (response: any): any =>\r\n    Array.isArray(response) ? response : response.value;\r\n  /**\r\n   * Endocing column name to odata notation\r\n   * @param colName column name\r\n   */\r\n  private getWrapColumnName = (colName: string): string =>\r\n    replaceAll(colName, \".\", \"/\");\r\n  /**\r\n   * grid calls this to get rows\r\n   * @param params ag-grid details for the request\r\n   */\r\n  getRows = (params: IGetRowsParams | IServerSideGetRowsParams): void => {\r\n    const me = this;\r\n    const childCount = me.groupCountFieldName;\r\n    const isServerMode = \"request\" in params;\r\n    const request = isServerMode\r\n      ? (params as IServerSideGetRowsParams).request\r\n      : (params as IGetRowsParams);\r\n    const requestSrv = request as IServerSideGetRowsRequest;\r\n\r\n    const pivotActive = !isServerMode\r\n      ? false\r\n      : requestSrv.pivotMode &&\r\n        requestSrv.pivotCols.length > 0 &&\r\n        requestSrv.valueCols.length > 0;\r\n\r\n    if (!pivotActive) {\r\n      (params as any).parentNode.columnApi.setSecondaryColumns([]);\r\n    }\r\n    const options = me.getOdataOptions(params);\r\n    const query = me.toQuery(options);\r\n    me.callApi(query).then(\r\n      async (x) => {\r\n        if (!x) {\r\n          params.failCallback();\r\n        } else {\r\n          const values = me.getOdataResult(x);\r\n          if (!pivotActive) {\r\n            if (!options.apply) {\r\n              params.successCallback(values, x[\"@odata.count\"]);\r\n              if (this.afterLoadData) {\r\n                this.afterLoadData(options, values, x[\"@odata.count\"]);\r\n              }\r\n            } else {\r\n              let count = values.length;\r\n              if (count === options.top && options.skip === 0) {\r\n                // Если мы получили группировку с числом экземпляров больше чем у мы запросили, то делаем запрос общего количества\r\n                me.callApi(query + \"/aggregate($count as count)\").then((y) => {\r\n                  count = me.getOdataResult(y)[0].count;\r\n                  params.successCallback(values, count);\r\n                });\r\n              } else {\r\n                if (options.skip != null && options.skip > 0) {\r\n                  count = null;\r\n                }\r\n                params.successCallback(values, count);\r\n                if (this.afterLoadData) {\r\n                  this.afterLoadData(options, values, count);\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            let rowData = x;\r\n            // Check count\r\n            if (\r\n              rowData.length === options.top &&\r\n              options.skip === 0 &&\r\n              requestSrv.groupKeys.length === 0\r\n            ) {\r\n              let eof = false;\r\n              while (!eof) {\r\n                options.skip += options.top || 0;\r\n                const subQuery = me.toQuery(options);\r\n                const newRowData = await me.callApi(subQuery);\r\n                if (!newRowData) {\r\n                  params.failCallback();\r\n                  return;\r\n                }\r\n                eof = newRowData.length !== options.top;\r\n                rowData = rowData.concat(newRowData);\r\n              }\r\n            }\r\n            const pivotResult = me.getPivot(\r\n              requestSrv.pivotCols,\r\n              requestSrv.rowGroupCols,\r\n              requestSrv.valueCols,\r\n              rowData,\r\n              childCount\r\n            );\r\n            rowData = pivotResult.data;\r\n            const secondaryColDefs = pivotResult.secondaryColDefs;\r\n            rowData = me.buildGroupsFromData(\r\n              rowData,\r\n              requestSrv.rowGroupCols,\r\n              requestSrv.groupKeys,\r\n              childCount\r\n            );\r\n            const totalCount =\r\n              requestSrv.groupKeys.length === 0\r\n                ? rowData.length\r\n                : rowData.length === options.top\r\n                ? null\r\n                : rowData.length;\r\n            if (totalCount > (options.top || 0)) {\r\n              const serverSideBlock = (params as any).parentNode.rowModel\r\n                .rowNodeBlockLoader.blocks[0];\r\n              serverSideBlock.rowNodeCacheParams.blockSize = totalCount;\r\n              serverSideBlock.endRow = serverSideBlock.startRow + totalCount;\r\n              serverSideBlock.createRowNodes();\r\n            }\r\n            params.successCallback(rowData, totalCount);\r\n            if (this.afterLoadData) {\r\n              this.afterLoadData(options, rowData, totalCount);\r\n            }\r\n            if (requestSrv.groupKeys.length === 0) {\r\n              if (this.beforeSetSecondaryColumns) {\r\n                this.beforeSetSecondaryColumns(secondaryColDefs);\r\n              }\r\n              (params as any).parentNode.columnApi.setSecondaryColumns(\r\n                secondaryColDefs\r\n              );\r\n            }\r\n          }\r\n        }\r\n      },\r\n      (err) => {\r\n        if (this.setError) {\r\n          this.setError(err);\r\n        }\r\n        // params.successCallback([], 0)\r\n      }\r\n    );\r\n  };\r\n  /**\r\n   * Generate odata options for build query from ag-grid request\r\n   * @param params ag-grid details for the request\r\n   */\r\n  getOdataOptions = (\r\n    params: IGetRowsParams | IServerSideGetRowsParams\r\n  ): OdataQueryExtendFull => {\r\n    const me = this;\r\n    const options: OdataQueryExtendFull = {};\r\n    const isServerMode = \"request\" in params;\r\n    const request = isServerMode\r\n      ? (params as IServerSideGetRowsParams).request\r\n      : (params as IGetRowsParams);\r\n    const childCount = me.groupCountFieldName;\r\n    if (this.beforeRequest) {\r\n      this.beforeRequest(options, this, request);\r\n    }\r\n    if (request.sortModel.length > 0) {\r\n      const sort = options.sort || [];\r\n      for (let i = 0; i < request.sortModel.length; i++) {\r\n        const col = request.sortModel[i];\r\n        let colName = me.getWrapColumnName(col.colId);\r\n        if (col.sort !== \"asc\") {\r\n          colName += \" desc\";\r\n        }\r\n        sort.push(colName);\r\n      }\r\n      options.sort = sort;\r\n    }\r\n\r\n    const filter = options.filter || [];\r\n    for (const colName in request.filterModel) {\r\n      if (request.filterModel.hasOwnProperty(colName)) {\r\n        const col = request.filterModel[colName];\r\n        let colFilter = \"\";\r\n        if (!col.operator) {\r\n          colFilter = me.getFilterOdata(colName, col);\r\n          if (colFilter) {\r\n            filter.push(colFilter);\r\n          }\r\n        } else {\r\n          const condition1 = me.getFilterOdata(colName, col.condition1);\r\n          const condition2 = me.getFilterOdata(colName, col.condition2);\r\n          if (condition1 && condition2) {\r\n            colFilter = `(${condition1} ${col.operator.toLowerCase()} ${condition2})`;\r\n            filter.push(colFilter);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let pivotActive = false;\r\n\r\n    const apply = options.apply || [];\r\n    if (isServerMode) {\r\n      const requestSrv = request as IServerSideGetRowsRequest;\r\n      pivotActive =\r\n        requestSrv.pivotMode &&\r\n        requestSrv.pivotCols.length > 0 &&\r\n        requestSrv.valueCols.length > 0;\r\n      if (requestSrv.rowGroupCols.length > 0) {\r\n        const filterGroupBy: string[] = [];\r\n        if (requestSrv.groupKeys.length < requestSrv.rowGroupCols.length) {\r\n          // If request only groups\r\n          for (let idx = 0; idx < requestSrv.groupKeys.length; idx++) {\r\n            const colValue = requestSrv.groupKeys[idx];\r\n            const condition = `${me.getWrapColumnName(\r\n              requestSrv.rowGroupCols[idx].field\r\n            )} eq ${\r\n              (me.isStrVal(colValue) ? \"'\" : \"\") +\r\n              me.encode(colValue) +\r\n              (me.isStrVal(colValue) ? \"'\" : \"\")\r\n            }`;\r\n            filterGroupBy.push(condition);\r\n          }\r\n          if (filterGroupBy.length > 0 || filter.length > 0) {\r\n            // Filters must by first\r\n            apply.push(`filter(${filterGroupBy.concat(filter).join(\" and \")})`);\r\n          }\r\n\r\n          const aggregate: string[] = [];\r\n          if (childCount) {\r\n            aggregate.push(me.odataAggregation.count(childCount));\r\n          }\r\n          if (requestSrv.valueCols.length > 0) {\r\n            for (let idx = 0; idx < requestSrv.valueCols.length; idx++) {\r\n              const colValue = requestSrv.valueCols[idx];\r\n              aggregate.push(\r\n                me.odataAggregation[colValue.aggFunc](\r\n                  me.getWrapColumnName(colValue.field)\r\n                )\r\n              );\r\n            }\r\n          }\r\n          let groups = [\r\n            me.getWrapColumnName(\r\n              requestSrv.rowGroupCols[requestSrv.groupKeys.length].field\r\n            ),\r\n          ];\r\n          const sort = options.sort || [];\r\n          const sortColOnly = sort.map((x) => x.split(\" \")[0]);\r\n          if (pivotActive) {\r\n            groups = groups.concat(\r\n              requestSrv.pivotCols.map((x) => me.getWrapColumnName(x.field))\r\n            );\r\n            groups.forEach((x) => {\r\n              if (sortColOnly.indexOf(x) < 0) {\r\n                sort.push(x);\r\n              }\r\n            });\r\n          }\r\n          options.sort = sort;\r\n          apply.push(\r\n            `groupby((${groups.join(\",\")})${\r\n              aggregate.length > 0 ? `,aggregate(${aggregate.join(\",\")})` : \"\"\r\n            })`\r\n          );\r\n\r\n          options.apply = apply;\r\n          delete options.sort;\r\n        } else {\r\n          // If request rowData by group filter\r\n          for (let idx = 0; idx < requestSrv.groupKeys.length; idx++) {\r\n            const colValue = requestSrv.groupKeys[idx];\r\n            const condition = `${me.getWrapColumnName(\r\n              requestSrv.rowGroupCols[idx].field\r\n            )} eq ${\r\n              (me.isStrVal(colValue) ? \"'\" : \"\") +\r\n              me.encode(colValue) +\r\n              (me.isStrVal(colValue) ? \"'\" : \"\")\r\n            }`;\r\n            filter.push(condition);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (filter.length > 0) {\r\n      options.filter = filter;\r\n    }\r\n    if (apply.length > 0) {\r\n      options.apply = apply;\r\n      delete options.filter;\r\n      delete options.expand;\r\n      // options.sort = null;\r\n    }\r\n    options.skip = request.startRow;\r\n    options.top = request.endRow - request.startRow;\r\n\r\n    if (!options.apply && options.skip === 0) {\r\n      options.count = true;\r\n    }\r\n    return options;\r\n  };\r\n  /**\r\n   * Generate odata query from ag-grid request\r\n   * @param params ag-grid details for the request\r\n   */\r\n  getOdataQuery = (params: IGetRowsParams | IServerSideGetRowsParams): string =>\r\n    this.toQuery(this.getOdataOptions(params));\r\n}\r\n"],"names":[],"mappings":"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"}